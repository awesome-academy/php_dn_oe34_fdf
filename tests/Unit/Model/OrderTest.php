<?php

namespace Tests\Unit\Model;

use App\Model\Order;
use App\Model\OrderDetail;
use App\Model\User;
use Illuminate\Database\Eloquent\Collection;
use Tests\TestCase;

class OrderTest extends TestCase
{
    protected $order;

    protected function setUp(): void
    {
        parent::setUp(); // TODO: Change the autogenerated stub
        $this->order = Order::firstOrCreate(['order_code' => 'Testing'], [
            'user_id' => 1,
            'order_code' => 'Testing',
            'total_price' => 1234,
            'status' => 1,
        ]);
    }

    public function test_contains_valid_fillable_properties()
    {
        $order = $this->order;

        $this->assertEquals([
            'user_id',
            'order_code',
            'total_price',
            'status',
        ], $order->getFillable());
    }

    public function test_order_belong_to_user()
    {
        $order = $this->order;

        $this->assertInstanceOf(User::class, $order->user);
    }

    public function test_order_has_many_order_details()
    {
        $order = $this->order;

        $orderDetails = OrderDetail::firstOrCreate(['order_id' => $order->id], [
            'order_id' => $order->id,
            'product_id' => 1,
            'quantity' => 1,
            'unit_price' => 1234,
        ]);

        $this->assertTrue($order->orderDetails->contains($orderDetails));
        $this->assertInstanceOf(Collection::class, $order->orderDetails);
    }
}
